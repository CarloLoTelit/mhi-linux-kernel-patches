From 169818626a5d5c8e420e2f3462c2c2c668b66606 Mon Sep 17 00:00:00 2001
From: Daniele Palmas <dnlplm@gmail.com>
Date: Wed, 21 Apr 2021 10:38:14 +0200
Subject: [PATCH 55/58] bus: mhi: force mhi host stack reset to detect modem
 flashing end

Once flashing in SBL through the XFP protocol ends, FN980 resets
and is not detected anymore by the host.

Force a reset of the mhi stack in order to detect it again.

Signed-off-by: Daniele Palmas <dnlplm@gmail.com>
---
 drivers/bus/mhi/pci_generic.c | 9 ++++++++-
 drivers/bus/mhi/uci.c         | 4 ++++
 include/linux/mhi.h           | 2 ++
 3 files changed, 14 insertions(+), 1 deletion(-)

diff --git a/drivers/bus/mhi/pci_generic.c b/drivers/bus/mhi/pci_generic.c
index 4365e4f25ba2..8a3b6443404c 100644
--- a/drivers/bus/mhi/pci_generic.c
+++ b/drivers/bus/mhi/pci_generic.c
@@ -22,7 +22,7 @@
 
 #define MHI_POST_RESET_DELAY_MS 500
 
-#define HEALTH_CHECK_PERIOD (HZ * 2)
+#define HEALTH_CHECK_PERIOD (HZ / 2)
 
 /**
  * struct mhi_pci_dev_info - MHI PCI device specific information
@@ -678,6 +678,13 @@ static void health_check(struct timer_list *t)
 			test_bit(MHI_PCI_DEV_SUSPENDED, &mhi_pdev->status))
 		return;
 
+	if (mhi_cntrl->xfp_reset == 1) {
+		mhi_cntrl->xfp_reset = 0;
+		dev_dbg(mhi_cntrl->cntrl_dev, "Device needs to be resetted EE = %d\n", mhi_cntrl->ee);
+		queue_work(system_long_wq, &mhi_pdev->recovery_work);
+		return;
+	}
+
 	if (!mhi_pci_is_alive(mhi_cntrl)) {
 		dev_err(mhi_cntrl->cntrl_dev, "Device died\n");
 		queue_work(system_long_wq, &mhi_pdev->recovery_work);
diff --git a/drivers/bus/mhi/uci.c b/drivers/bus/mhi/uci.c
index 4b173ca4cb54..8b4a5f22c2b6 100644
--- a/drivers/bus/mhi/uci.c
+++ b/drivers/bus/mhi/uci.c
@@ -148,6 +148,10 @@ static int mhi_uci_release(struct inode *inode, struct file *file)
 		mhi_unprepare_from_transfer(udev->mhi_dev);
 	mutex_unlock(&udev->mhi_dev_lock);
 
+	/* Check to detect if the modem has finished flashing and is resetting */
+	if (!strcmp("DIAG", udev->mhi_dev->name) && udev->mhi_dev->mhi_cntrl->ee == MHI_EE_SBL)
+		udev->mhi_dev->mhi_cntrl->xfp_reset = 1;
+
 	file->private_data = NULL;
 
 	kref_put(&udev->ref_count, mhi_uci_dev_release);
diff --git a/include/linux/mhi.h b/include/linux/mhi.h
index 86cea5256e3c..cb286f1bc3d0 100644
--- a/include/linux/mhi.h
+++ b/include/linux/mhi.h
@@ -456,6 +456,8 @@ struct mhi_controller {
 	bool fbc_download;
 	bool wake_set;
 	unsigned long irq_flags;
+	/* Flag to detect reset after xfp flashing  */
+	bool xfp_reset;
 };
 
 /**
-- 
2.25.1

